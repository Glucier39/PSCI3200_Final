---
title: "Data Assignment 1"
format: html
editor: visual
self-contained: true
---



## **Read-in data and prepare for analysis**



```{r}
library(ggplot2)
library(readr)
library(ggdag)
library(tidyverse)
library(gt)
library(modelsummary)

# read-in data
#3dat = read_csv(here::here("workshops/aau_survey/clean_endline_did.csv" )) %>%
dat = read_csv("https://raw.githubusercontent.com/jrspringman/psci3200-globaldev/main/workshops/aau_survey/clean_endline_did.csv" ) %>%
    # clean home region variable
  mutate(q8_baseline = ifelse(q8_baseline == "Southern Nations, Nationalities, and Peoples Region", "SNNPR", q8_baseline), 
         q8_baseline = str_remove(q8_baseline, " Region"))
# create color palette for plotting
palette = MetBrewer::met.brewer(name = "Cross")

d <- dat %>%  # select neccessary columns as outlined 
    select(response_id, treatment_status, user_language, q3_baseline, q26_civ, q26_civ_baseline, q26_politics, q26_politics_baseline, q26_public, q26_public_baseline, q27_1, q27_1_baseline, q27_3, q27_3_baseline, q17_3, q17_3_baseline, q17_1, q17_1_baseline, q17_2, q17_2_baseline) %>%
  rename( 
   gender = q3_baseline, 
    # Career Plans
  Bcivsociety_plan = q26_civ_baseline,# Baseline measurements recieve a B, so I can see their status at the front of the column  
  Ecivsociety_plan = q26_civ, # Endline measurements recieve an E 
  Bpol_plan = q26_politics_baseline,
  Epol_plan = q26_politics,
  Bpub_plan = q26_public_baseline,
  Epub_plan = q26_public,
  Bpuboffice_plan = q27_1_baseline,
  Epuboffice_plan = q27_1,
  Bnongov_plan = q27_3_baseline,
  Enongov_plan = q27_3,

  # Political Efficacy
  Byour_change = q17_3_baseline,
  Eyour_change = q17_3,
  Byouth_engage = q17_1_baseline,
  Eyouth_engage = q17_1,
  Byouth_change = q17_2_baseline,
  Eyouth_change = q17_2
)




```



## **Part 2: Create Index Measures**

**Requirement 2** (10%)

An additive index is created by summing the number of positive or consistent responses across several related survey items. It’s a straightforward way to combine variables, but it only works well when all items are measured on the same scale and in the same direction. If items vary in scale or meaning, the additive approach becomes misleading. It’s best used when the goal is to reflect the total number of favorable responses or behaviors.

An averaged z-score index, by contrast, standardizes each variable before combining them. This means transforming each item into a z-score by subtracting its mean and dividing by its standard deviation, so that all variables are on the same scale — with a mean of zero and a standard deviation of one. Then, these z-scores are averaged to create a composite measure. This method is particularly useful when combining variables that are measured differently or have different ranges.

The benefit of an additive index is its simplicity and intuitive interpretation. The advantage of an averaged z-score index is that it allows for fair combination of variables even when they’re originally on different scales. However, z-score indices assume a normal distribution and require interval-level data.

**Requirement 3** (20%)

1.  Create an additive index for the baseline and endline measures of the “Future plans for a career in public sector or civil society” variables. This should correspond to seperate counts of the number of future plans that each individual has at baseline and endline.



```{r}


d <- d %>%
  mutate(across(c(Ecivsociety_plan, Bcivsociety_plan, Epub_plan, Bpub_plan), 
                ~ ifelse(. == TRUE, 1, 0)), # mutate important rows 
         Bindex_civsoc_pub = Bcivsociety_plan + Bpub_plan, # pre index
         Eindex_civsoc_pub = Ecivsociety_plan + Epub_plan)  %>% # post index 
  drop_na()
  



```



2.  Create an averaged z-scores for the baseline and endline values of the “Future plans for a career in public sector or civil society” and “Feelings of political efficacy” variables.



```{r}






all_vars <- list( 
  base_career = c("Bcivsociety_plan", "Bpub_plan"), 
  end_career  = c("Ecivsociety_plan", "Epub_plan"), 
  
  base_eff = c("Byour_change", "Byouth_engage", "Byouth_change"),
  end_eff  = c("Eyour_change", "Eyouth_engage", "Eyouth_change")
)

z_score = function(x, y){ # taken from fp_essential.qmd
  # calculate column mean and sd
  c_mean = mean( as.numeric( unlist(x[, y])) , na.rm = T)
  c_sd = sd( as.numeric( unlist(x[, y])) , na.rm = T)
  # subtract column mean and divide by column SD
  ( as.numeric(x[, y, drop = TRUE]) - c_mean) / c_sd
}


for (group_name in names(all_vars)) {
  group_vars <- all_vars[[group_name]]
  
  #create columns for each z score using z_score function
    for (var in group_vars) {
    d[[paste0(var, "_z")]] <- z_score(d, var)
  }

   #create an averaged index for the group 
  z_vars <- paste0(group_vars, "_z")  # List of z-score column names
  d[[paste0("z_index_", group_name)]] <- rowMeans(d[, z_vars], na.rm = TRUE)
}


```



Requirement 4 (20%)

To make sure that these scores look as you’d expect, create a ggplot visualizing the distribution of the z-scores at baseline and endline. You should have 4 figures: one corresponding to each z-score at baseline and endline. In words, describe whether the figures tell us anything about changes over time.



```{r}

z_plot_data <- d %>% # reshape data for easier facet
  select(z_index_base_career, z_index_end_career, 
         z_index_base_eff, z_index_end_eff) %>% # select cols
  pivot_longer(
    everything(),
    names_to = "IndexType",
    values_to = "ZScore"
  ) %>%
  mutate(
    Time = case_when(
      grepl("_base_", IndexType) ~ "Baseline",
      grepl("_end_", IndexType) ~ "Endline"
    ),
    Dimension = case_when(
      grepl("career", IndexType) ~ "Career Plans",
      grepl("eff", IndexType) ~ "Political Efficacy"
    )
  ) %>%
group_by(IndexType) %>%
  mutate(n = n())
```

```{r}

ggplot(z_plot_data, aes(x = ZScore)) +
  geom_histogram(bins = 30, fill = "skyblue", color = "white") +
  facet_grid(Dimension ~ Time) +
  theme_minimal() +
  labs(
    title = "Distribution of Averaged Z-Score Indices at Baseline and Endline",
    x = "Z-Score",
    y = "Count"
  )

ggplot(z_plot_data, aes(x = ZScore)) + 
  geom_col(fill = palette[9]) + 
    facet_wrap(vars(Dimension), scales = "free") + 
  labs(y = "Number of times", x = NULL, 
    title = "How often do youth participate?") 
```

```{r}
d_sub <- d %>%
  select(response_id, gender, 
         z_index_base_career, z_index_end_career,
         z_index_base_eff, z_index_end_eff)

model1 <- lm(z_index_base_career ~ z_index_base_eff, data = d_sub)


modelsummary(model1, output = "markdown")

```

